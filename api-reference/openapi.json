{
  "openapi": "3.1.0",
  "info": {
    "title": "Bfloat AI API Documentation",
    "description": "The Bfloat AI API is a robust suite of tools designed to empower developers by providing comprehensive, scalable, and easy-to-integrate solutions. With our API, you can effortlessly manage headless browser sessions and interact with a headless browser through WebSockets.",
    "version": "3.1.0"
  },
  "servers": [
    {
      "url": "https://api.bfloat.ai"
    }
  ],
  "paths": {
    "/v1/sessions": {
      "get": {
        "summary": "Get Sessions",
        "operationId": "get_sessions_v1_sessions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SessionInfo"
                  },
                  "type": "array",
                  "title": "Response Get Sessions V1 Sessions Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      },
      "post": {
        "summary": "Create Session",
        "operationId": "create_session_v1_sessions_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionInfo"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/sessions/{session_id}/stop": {
      "post": {
        "summary": "Stop Session",
        "operationId": "stop_session_v1_sessions__session_id__stop_post",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sessions/{session_id}": {
      "get": {
        "summary": "Get Session Info",
        "operationId": "get_session_info_v1_sessions__session_id__get",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionInfo"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DebugInfo": {
        "properties": {
          "ws_endpoint": {
            "type": "string",
            "title": "Ws Endpoint",
            "description": "WebSocket endpoint for the browser"
          },
          "ws_debugger_url": {
            "type": "string",
            "title": "Ws Debugger Url",
            "description": "WebSocket URL for the debugger"
          },
          "devtools_frontend_url": {
            "type": "string",
            "title": "Devtools Frontend Url",
            "description": "URL for the DevTools frontend"
          }
        },
        "type": "object",
        "required": ["ws_endpoint", "ws_debugger_url", "devtools_frontend_url"],
        "title": "DebugInfo"
      },
      "ErrorResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code"
          }
        },
        "type": "object",
        "required": ["message"],
        "title": "ErrorResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "SessionInfo": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The session id"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The session status"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The project id"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At",
            "description": "The session updated at"
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "description": "The session created at"
          },
          "debug_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DebugInfo"
              },
              {
                "type": "null"
              }
            ],
            "description": "The session debug info"
          },
          "duration": {
            "type": "integer",
            "title": "Duration",
            "description": "The session duration"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "project_id",
          "updated_at",
          "created_at",
          "debug_info",
          "duration"
        ],
        "title": "SessionInfo"
      },
      "SuccessResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "success"
          }
        },
        "type": "object",
        "required": ["message"],
        "title": "SuccessResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}
